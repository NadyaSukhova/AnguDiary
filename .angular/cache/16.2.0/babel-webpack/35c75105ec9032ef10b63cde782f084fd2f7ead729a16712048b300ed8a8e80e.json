{"ast":null,"code":"'use strict';\n\nconst SqlString = require('sqlstring');\nconst Connection = require('./lib/connection.js');\nconst ConnectionConfig = require('./lib/connection_config.js');\nconst parserCache = require('./lib/parsers/parser_cache');\nexports.createConnection = function (opts) {\n  return new Connection({\n    config: new ConnectionConfig(opts)\n  });\n};\nexports.connect = exports.createConnection;\nexports.Connection = Connection;\nexports.ConnectionConfig = ConnectionConfig;\nconst Pool = require('./lib/pool.js');\nconst PoolCluster = require('./lib/pool_cluster.js');\nexports.createPool = function (config) {\n  const PoolConfig = require('./lib/pool_config.js');\n  return new Pool({\n    config: new PoolConfig(config)\n  });\n};\nexports.createPoolCluster = function (config) {\n  const PoolCluster = require('./lib/pool_cluster.js');\n  return new PoolCluster(config);\n};\nexports.createQuery = Connection.createQuery;\nexports.Pool = Pool;\nexports.PoolCluster = PoolCluster;\nexports.createServer = function (handler) {\n  const Server = require('./lib/server.js');\n  const s = new Server();\n  if (handler) {\n    s.on('connection', handler);\n  }\n  return s;\n};\nexports.PoolConnection = require('./lib/pool_connection');\nexports.authPlugins = require('./lib/auth_plugins');\nexports.escape = SqlString.escape;\nexports.escapeId = SqlString.escapeId;\nexports.format = SqlString.format;\nexports.raw = SqlString.raw;\nexports.__defineGetter__('createConnectionPromise', () => require('./promise.js').createConnection);\nexports.__defineGetter__('createPoolPromise', () => require('./promise.js').createPool);\nexports.__defineGetter__('createPoolClusterPromise', () => require('./promise.js').createPoolCluster);\nexports.__defineGetter__('Types', () => require('./lib/constants/types.js'));\nexports.__defineGetter__('Charsets', () => require('./lib/constants/charsets.js'));\nexports.__defineGetter__('CharsetToEncoding', () => require('./lib/constants/charset_encodings.js'));\nexports.setMaxParserCache = function (max) {\n  parserCache.setMaxCache(max);\n};\nexports.clearParserCache = function () {\n  parserCache.clearCache();\n};","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}