{"ast":null,"code":"'use strict';\n\nconst net = require('net');\nconst EventEmitter = require('events').EventEmitter;\nconst Connection = require('./connection');\nconst ConnectionConfig = require('./connection_config');\n\n// TODO: inherit Server from net.Server\nclass Server extends EventEmitter {\n  constructor() {\n    super();\n    this.connections = [];\n    this._server = net.createServer(this._handleConnection.bind(this));\n  }\n  _handleConnection(socket) {\n    const connectionConfig = new ConnectionConfig({\n      stream: socket,\n      isServer: true\n    });\n    const connection = new Connection({\n      config: connectionConfig\n    });\n    this.emit('connection', connection);\n  }\n  listen(port) {\n    this._port = port;\n    this._server.listen.apply(this._server, arguments);\n    return this;\n  }\n  close(cb) {\n    this._server.close(cb);\n  }\n}\nmodule.exports = Server;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}