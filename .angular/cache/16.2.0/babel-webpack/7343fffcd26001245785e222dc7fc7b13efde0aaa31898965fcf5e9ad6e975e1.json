{"ast":null,"code":"var util = require('util');\nvar toString = Object.prototype.toString;\nvar isWindows = process.platform === 'win32';\nfunction isObject(arg) {\n  return toString.call(arg) == '[object Object]';\n}\n\n/**\n * @description\n * Deep extend\n * @example\n * extend({ key: { k1: 'v1'} }, { key: { k2: 'v2' }, none: { k: 'v' } });\n * extend({ arr: [] }, { arr: [ {}, {} ] });\n */\nfunction extend(target, source) {\n  var value;\n  for (var key in source) {\n    value = source[key];\n    if (Array.isArray(value)) {\n      if (!Array.isArray(target[key])) {\n        target[key] = [];\n      }\n      extend(target[key], value);\n    } else if (isObject(value)) {\n      if (!isObject(value)) {\n        target[key] = {};\n      }\n      extend(target[key], value);\n    } else {\n      target[key] = value;\n    }\n  }\n  return target;\n}\nextend(exports, util);\nexports.extend = extend;\nexports.isObject = isObject;\nexports.isArray = Array.isArray;\nexports.noop = function () {};\nexports.isFunction = function (value) {\n  return typeof value === 'function';\n};\nexports.isString = function (value) {\n  return typeof value === 'string';\n};\nexports.isUndefined = function (value) {\n  return typeof value == 'undefined';\n};\nexports.hrtime = function (time) {\n  if (time) {\n    var spend = process.hrtime(time);\n    spend = (spend[0] + spend[1] / 1e9) * 1000 + 'ms';\n    return spend;\n  } else {\n    return process.hrtime();\n  }\n};\nexports.path = {};\nif (isWindows) {\n  // Regex to split a windows path into three parts: [*, device, slash,\n  // tail] windows-only\n  var splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n  exports.path.isAbsolute = function (filepath) {\n    var result = splitDeviceRe.exec(filepath),\n      device = result[1] || '',\n      isUnc = !!device && device.charAt(1) !== ':';\n    // UNC paths are always absolute\n    return !!result[2] || isUnc;\n  };\n\n  // Normalize \\\\ paths to / paths.\n  exports.path.unixifyPath = function (filepath) {\n    return filepath.replace(/\\\\/g, '/');\n  };\n} else {\n  exports.path.isAbsolute = function (filepath) {\n    return filepath.charAt(0) === '/';\n  };\n  exports.path.unixifyPath = function (filepath) {\n    return filepath;\n  };\n}","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}